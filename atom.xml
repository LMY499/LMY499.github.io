<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LMY</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-10-11T06:32:49.669Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>小李同学</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>方法小结</title>
    <link href="http://example.com/2024/10/11/%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2024/10/11/%E6%96%B9%E6%B3%95/</id>
    <published>2024-10-11T06:00:14.000Z</published>
    <updated>2024-10-11T06:32:49.669Z</updated>
    
    <content type="html"><![CDATA[<h1 id="方法的概念"><a href="#方法的概念" class="headerlink" title="方法的概念"></a>方法的概念</h1><p> 方法（method）是程序中最小的执行单元<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> public static void 方法名 (   ) &#123;</span><br><span class="line">// 方法体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>调用<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">method();</span><br></pre></td></tr></table></figure><br> 带参数方法定义和调用<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> public static void isEvenNumber(int number)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line">public static void getMax(int num1, int num2)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br> 调用格式：<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> isEvenNumber(10);</span><br><span class="line"></span><br><span class="line">getMax(10,20);</span><br></pre></td></tr></table></figure><br> 带返回值方法练习：<br> 需求：</p><p>​ 定义一个方法，求一家商场每个季度的营业额。根据方法结果再计算出全年营业额。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public class MethodDemo9 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        /*需求：定义一个方法，求一家商场每个季度的营业额。</span><br><span class="line">        根据方法结果再计算出全年营业额。*/</span><br><span class="line">        int sum1 = getSum(10, 20, 30);</span><br><span class="line">        int sum2 = getSum(10, 20, 30);</span><br><span class="line">        int sum3 = getSum(10, 20, 30);</span><br><span class="line">        int sum4 = getSum(10, 20, 30);</span><br><span class="line"></span><br><span class="line">        int sum = sum1 + sum2 + sum3 + sum4;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //心得：</span><br><span class="line">    //1.我要干嘛？  决定了方法体   每个季度的营业额</span><br><span class="line">    //2.我干这件事情，需要什么才能完成？ 决定了形参 需要三个月的营业额 a b c</span><br><span class="line">    //3.我干完这件事情，看调用处是否需要使用方法的结果。   决定了返回值</span><br><span class="line">    //如果需要使用，那么必须返回</span><br><span class="line">    //如果不需要使用，可以返回也可以不返回</span><br><span class="line">    public static int getSum(int month1,int month2,int month3)&#123;</span><br><span class="line">        int sum = month1 + month2 + month3;</span><br><span class="line">        //因为方法的调用处，需要继续使用这个结果</span><br><span class="line">        //所以我们必须要把sum返回</span><br><span class="line">        return sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需求：</p><p>​ 键盘录入两个圆的半径（整数），比较两个圆的面积。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">public class MethodDemo10 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //需求：键盘录入两个圆的半径（整数），比较两个圆的面积。</span><br><span class="line">        //键盘录入圆的半径</span><br><span class="line">        Scanner sc = new Scanner(System.in);</span><br><span class="line">        System.out.println(&quot;请输入圆的半径&quot;);</span><br><span class="line">        int radii1 = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;请输入第二个圆的半径&quot;);</span><br><span class="line">        int radii2 = sc.nextInt();</span><br><span class="line">        double area1 = getArea(radii1);</span><br><span class="line">        double area2 = getArea(radii2);</span><br><span class="line">        if(area1 &gt; area2)&#123;</span><br><span class="line">            System.out.println(&quot;第一个圆更大&quot;);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            System.out.println(&quot;第二个圆更大&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //心得：</span><br><span class="line">    //1.我要干嘛？   求圆的面积</span><br><span class="line">    //2.我干这件事情，需要什么才能完成？        半径</span><br><span class="line">    //3.方法的调用处，是否需要继续使用方法的结果    要比较</span><br><span class="line">    public static double getArea(int radii) &#123;</span><br><span class="line">        double area = 3.14 * radii * radii;</span><br><span class="line">        return area;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义方法时，要做到两个明确</p><p>明确返回值类型：主要是明确方法操作完毕之后是否有数据返回，如果没有，写void；如果有，写对应的数据类型<br>明确参数：主要是明确参数的类型和数量<br>调用方法时的注意：</p><p>void类型的方法，直接调用即可<br>非void类型的方法，推荐用变量接收调用</p><h1 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h1><p>方法重载指同一个类中定义的多个方法之间的关系，满足下列条件的多个方法相互构成重载</p><p>多个方法在同一个类中<br>多个方法具有相同的方法名<br>多个方法的参数不相同，类型不同或者数量不同</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">public class MethodTest &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //调用方法</span><br><span class="line">        System.out.println(compare(10, 20));</span><br><span class="line">        System.out.println(compare((byte) 10, (byte) 20));</span><br><span class="line">        System.out.println(compare((short) 10, (short) 20));</span><br><span class="line">        System.out.println(compare(10L, 20L));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //int</span><br><span class="line">    public static boolean compare(int a, int b) &#123;</span><br><span class="line">        System.out.println(&quot;int&quot;);</span><br><span class="line">        return a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //byte</span><br><span class="line">    public static boolean compare(byte a, byte b) &#123;</span><br><span class="line">        System.out.println(&quot;byte&quot;);</span><br><span class="line">        return a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //short</span><br><span class="line">    public static boolean compare(short a, short b) &#123;</span><br><span class="line">        System.out.println(&quot;short&quot;);</span><br><span class="line">        return a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //long</span><br><span class="line">    public static boolean compare(long a, long b) &#123;</span><br><span class="line">        System.out.println(&quot;long&quot;);</span><br><span class="line">        return a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;方法的概念&quot;&gt;&lt;a href=&quot;#方法的概念&quot; class=&quot;headerlink&quot; title=&quot;方法的概念&quot;&gt;&lt;/a&gt;方法的概念&lt;/h1&gt;&lt;p&gt; 方法（method）是程序中最小的执行单元&lt;br&gt; &lt;figure class=&quot;highlight plaint</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数组小结</title>
    <link href="http://example.com/2024/09/28/%E6%95%B0%E7%BB%84%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2024/09/28/%E6%95%B0%E7%BB%84%E7%9A%84%E5%AD%A6%E4%B9%A0/</id>
    <published>2024-09-28T05:00:14.000Z</published>
    <updated>2024-09-28T05:26:45.036Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数组指的是一种容器，可以同来存储同种数据类型的多个值。"><a href="#数组指的是一种容器，可以同来存储同种数据类型的多个值。" class="headerlink" title="数组指的是一种容器，可以同来存储同种数据类型的多个值。"></a>数组指的是一种容器，可以同来存储同种数据类型的多个值。</h3><h3 id="如何定义数组-数据类型-数组名-比如：int-array"><a href="#如何定义数组-数据类型-数组名-比如：int-array" class="headerlink" title="如何定义数组 数据类型 [  ] 数组名 比如：int [   ] array"></a>如何定义数组 数据类型 [  ] 数组名 比如：int [   ] array</h3><h3 id="数组的静态初始化​-数据类型-数组名-new-数据类型-元素1，元素2，元素3，元素4…"><a href="#数组的静态初始化​-数据类型-数组名-new-数据类型-元素1，元素2，元素3，元素4…" class="headerlink" title="数组的静态初始化​ 数据类型[] 数组名 &#x3D; new 数据类型[]{元素1，元素2，元素3，元素4…};"></a>数组的静态初始化​ 数据类型[] 数组名 &#x3D; new 数据类型[]{元素1，元素2，元素3，元素4…};</h3><h3 id="比如：​-int-arr-new-int-11-22-33"><a href="#比如：​-int-arr-new-int-11-22-33" class="headerlink" title="比如：​ int[  ] arr &#x3D; new int[  ]{11,22,33};"></a>比如：​ int[  ] arr &#x3D; new int[  ]{11,22,33};</h3><h3 id="double-arr-new-double-1-1-1-2-1-3"><a href="#double-arr-new-double-1-1-1-2-1-3" class="headerlink" title="double[] arr &#x3D; new double[  ]{1.1,1.2,1.3};"></a>double[] arr &#x3D; new double[  ]{1.1,1.2,1.3};</h3><h3 id="索引一定是从0开始不断增加。"><a href="#索引一定是从0开始不断增加。" class="headerlink" title="索引一定是从0开始不断增加。"></a>索引一定是从0开始不断增加。</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">数组的遍历</span><br><span class="line">for(int i = 0; i &lt; arr.length; i++)&#123;</span><br><span class="line">    //在循环的过程中，i依次表示数组中的每一个索引</span><br><span class="line">    sout(arr[i]);//就可以把数组里面的每一个元素都获取出来，并打印在控制台上了。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="当数组的内容不确定时可用动态数组"><a href="#当数组的内容不确定时可用动态数组" class="headerlink" title="当数组的内容不确定时可用动态数组"></a>当数组的内容不确定时可用动态数组</h2><p>数据类型[] 数组名 &#x3D; new 数据类型[数组的长度];</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//1.定义一个数组，存3个人的年龄，年龄未知</span><br><span class="line">int[] agesArr = new int[3];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//2.定义一个数组，存班级10名学生的考试成绩，考试成绩暂时未知，考完才知道。</span><br><span class="line">int[] scoresArr = new int[10];</span><br></pre></td></tr></table></figure><h2 id="练习-统计个数"><a href="#练习-统计个数" class="headerlink" title="练习 统计个数"></a>练习 统计个数</h2><h4 id="需求：生成10个1-100之间的随机数存入数"><a href="#需求：生成10个1-100之间的随机数存入数" class="headerlink" title="需求：生成10个1~100之间的随机数存入数"></a>需求：生成10个1~100之间的随机数存入数</h4><p>1）求出所有数据的和<br>2）求所有数据的平均数<br>3）统计有多少个数据比平均值小</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">//分析：</span><br><span class="line">//1.定义数组</span><br><span class="line">int[] arr = new int[10];</span><br><span class="line">//2.把随机数存入到数组当中</span><br><span class="line">Random r = new Random();</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">    //每循环一次，就会生成一个新的随机数</span><br><span class="line">    int number = r.nextInt(100) + 1;</span><br><span class="line">    //把生成的随机数添加的数组当中</span><br><span class="line">    //数组名[索引] = 数据;</span><br><span class="line">    arr[i] = number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 1）求出所有数据的和</span><br><span class="line">//定义求和变量</span><br><span class="line">int sum = 0;</span><br><span class="line">for (int i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">    //循环得到每一个元素</span><br><span class="line">    //并把元素累加到sum当中</span><br><span class="line">    sum = sum + arr[i];</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;数组中所有数据的和为：&quot; + sum);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//2）求所有数据的平均数</span><br><span class="line">int avg = sum / arr.length;</span><br><span class="line">System.out.println(&quot;数组中平均数为：&quot; + avg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//3）统计有多少个数据比平均值小</span><br><span class="line">int count = 0;</span><br><span class="line">for (int i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">    if(arr[i] &lt; avg)&#123;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//当循环结束之后，就表示我已经找到了所有的比平均数小的数据</span><br><span class="line">System.out.println(&quot;在数组中，一共有&quot; + count + &quot;个数据，比平均数小&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//遍历数组，验证答案</span><br><span class="line">for (int i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">    System.out.print(arr[i] + &quot; &quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="交换数据"><a href="#交换数据" class="headerlink" title="交换数据"></a>交换数据</h2><h4 id="需求：定义一个数组，存入1-2-3-4-5。按照要求交换索引对应的元素。"><a href="#需求：定义一个数组，存入1-2-3-4-5。按照要求交换索引对应的元素。" class="headerlink" title="需求：定义一个数组，存入1,2,3,4,5。按照要求交换索引对应的元素。"></a>需求：定义一个数组，存入1,2,3,4,5。按照要求交换索引对应的元素。</h4><p>交换前：1,2,3,4,5</p><p>交换后：5,2,3,4,1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//1.定义数组存储数据</span><br><span class="line">int[] arr = &#123;1,2,3,4,5&#125;;</span><br><span class="line">//2.利用循环去交换数据</span><br><span class="line">for(int i = 0,j = arr.length - 1; i &lt; j; i++,j--)&#123;</span><br><span class="line">    //交换变量i和变量j指向的元素</span><br><span class="line">    int temp = arr[i];</span><br><span class="line">    arr[i] = arr[j];</span><br><span class="line">    arr[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line">//当循环结束之后，那么数组中的数据就实现了头尾交换</span><br><span class="line">for (int i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">    System.out.print(arr[i] + &quot; &quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;数组指的是一种容器，可以同来存储同种数据类型的多个值。&quot;&gt;&lt;a href=&quot;#数组指的是一种容器，可以同来存储同种数据类型的多个值。&quot; class=&quot;headerlink&quot; title=&quot;数组指的是一种容器，可以同来存储同种数据类型的多个值。&quot;&gt;&lt;/a&gt;数组指的是</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java即将开始数组的学习</title>
    <link href="http://example.com/2024/09/27/javaday2/"/>
    <id>http://example.com/2024/09/27/javaday2/</id>
    <published>2024-09-27T00:00:14.000Z</published>
    <updated>2024-09-27T00:03:37.523Z</updated>
    
    <content type="html"><![CDATA[<h2 id="经过这两天的java学习，我重新对while循环和for循环有了新的认知，同时掌握了Scanner输入语句的使用，对普通的算法编程也逐渐熟悉，能够通过自己的思路对问题进行代码编写。"><a href="#经过这两天的java学习，我重新对while循环和for循环有了新的认知，同时掌握了Scanner输入语句的使用，对普通的算法编程也逐渐熟悉，能够通过自己的思路对问题进行代码编写。" class="headerlink" title="经过这两天的java学习，我重新对while循环和for循环有了新的认知，同时掌握了Scanner输入语句的使用，对普通的算法编程也逐渐熟悉，能够通过自己的思路对问题进行代码编写。"></a>经过这两天的java学习，我重新对while循环和for循环有了新的认知，同时掌握了Scanner输入语句的使用，对普通的算法编程也逐渐熟悉，能够通过自己的思路对问题进行代码编写。</h2><h3 id="通过我和老师的探讨，我过几天可能需要对linux也进行学习，这是大数据非常重要的一部分，我到时候也会更新linux的学习过程，加油！"><a href="#通过我和老师的探讨，我过几天可能需要对linux也进行学习，这是大数据非常重要的一部分，我到时候也会更新linux的学习过程，加油！" class="headerlink" title="通过我和老师的探讨，我过几天可能需要对linux也进行学习，这是大数据非常重要的一部分，我到时候也会更新linux的学习过程，加油！"></a>通过我和老师的探讨，我过几天可能需要对linux也进行学习，这是大数据非常重要的一部分，我到时候也会更新linux的学习过程，加油！</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;经过这两天的java学习，我重新对while循环和for循环有了新的认知，同时掌握了Scanner输入语句的使用，对普通的算法编程也逐渐熟悉，能够通过自己的思路对问题进行代码编写。&quot;&gt;&lt;a href=&quot;#经过这两天的java学习，我重新对while循环和for循环</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>开始java的学习~</title>
    <link href="http://example.com/2024/09/23/javaday1/"/>
    <id>http://example.com/2024/09/23/javaday1/</id>
    <published>2024-09-22T16:12:14.000Z</published>
    <updated>2024-09-23T08:35:31.403Z</updated>
    
    <content type="html"><![CDATA[<h3 id="这两天学习大数据的时候，在看HDFS时发现需要java的基本功，所以今天开始学习java，目标一月内搞定，加油呀！！"><a href="#这两天学习大数据的时候，在看HDFS时发现需要java的基本功，所以今天开始学习java，目标一月内搞定，加油呀！！" class="headerlink" title="这两天学习大数据的时候，在看HDFS时发现需要java的基本功，所以今天开始学习java，目标一月内搞定，加油呀！！"></a>这两天学习大数据的时候，在看HDFS时发现需要java的基本功，所以今天开始学习java，目标一月内搞定，加油呀！！</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;这两天学习大数据的时候，在看HDFS时发现需要java的基本功，所以今天开始学习java，目标一月内搞定，加油呀！！&quot;&gt;&lt;a href=&quot;#这两天学习大数据的时候，在看HDFS时发现需要java的基本功，所以今天开始学习java，目标一月内搞定，加油呀！！&quot; cl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>xsync以及ssh免密登录配置</title>
    <link href="http://example.com/2024/08/19/1.xsync%E4%BB%A5%E5%8F%8Assh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2024/08/19/1.xsync%E4%BB%A5%E5%8F%8Assh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE/</id>
    <published>2024-08-19T14:51:42.000Z</published>
    <updated>2024-08-19T15:07:09.369Z</updated>
    
    <content type="html"><![CDATA[<h2 id="今日小结"><a href="#今日小结" class="headerlink" title="今日小结"></a>今日小结</h2><h3 id="今天学习了xsync集群分发脚本-配置完环境后使用xsync-目标路径就可将一台虚拟机的配置文件直接分享到另外几台服务器上，省去了配置的时间消耗，十分的方便快捷。"><a href="#今天学习了xsync集群分发脚本-配置完环境后使用xsync-目标路径就可将一台虚拟机的配置文件直接分享到另外几台服务器上，省去了配置的时间消耗，十分的方便快捷。" class="headerlink" title="今天学习了xsync集群分发脚本,配置完环境后使用xsync+目标路径就可将一台虚拟机的配置文件直接分享到另外几台服务器上，省去了配置的时间消耗，十分的方便快捷。"></a>今天学习了xsync集群分发脚本,配置完环境后使用xsync+目标路径就可将一台虚拟机的配置文件直接分享到另外几台服务器上，省去了配置的时间消耗，十分的方便快捷。</h3><h3 id="不过还是会要输入密码才能获取其他虚拟机的权限，因此我们采用ssh免密登录即可以后都省去输入密码的环节。"><a href="#不过还是会要输入密码才能获取其他虚拟机的权限，因此我们采用ssh免密登录即可以后都省去输入密码的环节。" class="headerlink" title="不过还是会要输入密码才能获取其他虚拟机的权限，因此我们采用ssh免密登录即可以后都省去输入密码的环节。"></a>不过还是会要输入密码才能获取其他虚拟机的权限，因此我们采用ssh免密登录即可以后都省去输入密码的环节。</h3><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>1.我们先切换到 .ssh的路径下通过ssh-keygen -t rsa获取公钥和私钥。id_rsa（私钥）、id_rsa.pub（公钥） </p><h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3><p>2.三台虚拟机分别执行ssh-copy-id hadoop102， ssh-copy-id hadoop103 ，ssh-copy-id hadoop104，从而可以获取彼此的免密登录，今后无论是互相登录还是传输文件都不需要在输入密码了，更加的丝滑。</p><h3 id="明天继续加油吧！"><a href="#明天继续加油吧！" class="headerlink" title="明天继续加油吧！"></a>明天继续加油吧！</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;今日小结&quot;&gt;&lt;a href=&quot;#今日小结&quot; class=&quot;headerlink&quot; title=&quot;今日小结&quot;&gt;&lt;/a&gt;今日小结&lt;/h2&gt;&lt;h3 id=&quot;今天学习了xsync集群分发脚本-配置完环境后使用xsync-目标路径就可将一台虚拟机的配置文件直接分享到另外几台</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>&#39;学习大数据的碎碎念（记录）&#39;</title>
    <link href="http://example.com/2024/08/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    <id>http://example.com/2024/08/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0%E7%A2%8E%E7%A2%8E%E5%BF%B5/</id>
    <published>2024-08-17T16:12:14.000Z</published>
    <updated>2024-08-18T14:10:29.970Z</updated>
    
    <content type="html"><![CDATA[<h3 id="大家好，我是一名24级计算机的研究生，研究方向是大数据存储技术，以后想走大数据开发方向，目前是个小白，想用此网站记录一下自己的学习经历和过程，大家一起加油吧！"><a href="#大家好，我是一名24级计算机的研究生，研究方向是大数据存储技术，以后想走大数据开发方向，目前是个小白，想用此网站记录一下自己的学习经历和过程，大家一起加油吧！" class="headerlink" title="大家好，我是一名24级计算机的研究生，研究方向是大数据存储技术，以后想走大数据开发方向，目前是个小白，想用此网站记录一下自己的学习经历和过程，大家一起加油吧！"></a>大家好，我是一名24级计算机的研究生，研究方向是大数据存储技术，以后想走大数据开发方向，目前是个小白，想用此网站记录一下自己的学习经历和过程，大家一起加油吧！</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;大家好，我是一名24级计算机的研究生，研究方向是大数据存储技术，以后想走大数据开发方向，目前是个小白，想用此网站记录一下自己的学习经历和过程，大家一起加油吧！&quot;&gt;&lt;a href=&quot;#大家好，我是一名24级计算机的研究生，研究方向是大数据存储技术，以后想走大数据开发</summary>
      
    
    
    
    
  </entry>
  
</feed>
